import datetime

a = 'Hello'
b = 'World'

if __name__ == '__main__':
    print('---Преимущество f-строк')
    print(a + ' | ' + b)  # плохо, т.к. при каждой такой операции создается новый объект и выделяется память
    print(a, b)
    print(f'{a}, {b}!')

    print('---Разница в применении python 3.7, 3.8+')

    result = 121
    print(f'result = {result}')  # python 3.7
    print(f'{result=}')  # python 3.8+

    print('---Использование f-строк при присваивании')

    c = f'result = {result}'
    print(c)

    print('---Вывод результата в нужном виде')

    result = 121
    print(result)  # обычный десятеричный вывод
    print(f'{result:b}')  # binary (двоичный код)
    print(f'{result:x}')  # hexadecimal (шестнадцатиричная система)

    print('---Вывод необходимого кол-ва знаков после запятой')
    pi = 3.141592
    print(f'{pi:.2f}')  # вывод числа типа float с двумя знаками после запятой

    print('---Вывод числа с отступом (с дозаполнением нулями)')
    result = 121
    print(f'{result:6}')  # отступ в виде пробелов
    print(f'{result:06}')  # отступ в виде нулей

    print('---Вывод числа внутри диапазона')
    result = 591
    print(f'{result:^12}')  # число 591 по середине
    print(f'{result:>12}')  # число 591 справа
    print(f'{result:<12}')  # число 591 слева

    print('---Вывод числа внутри диапазона с заполнением нулями')
    result = 591
    print(f'{result:0^12}')  # число 591 по середине
    print(f'{result:0>12}')  # число 591 справа
    print(f'{result:0<12}')  # число 591 слева

    print('---Вывод числа внутри диапазона с заполнением спецсимволами')
    result = 591
    print(f'{result:=^12}')  # число 591 по середине
    print(f'{result:->12}')  # число 591 справа
    print(f'{result:*<12}')  # число 591 слева

    print('---Вывод числа с разделителями')
    result = 5911230987685765349780
    print(f'{result:,}')  # добавить разделитель для тысяч при выводе

    print('---PyCharm сам распознает f-строки и доставляет букву f вначале, если есть переменные внутри {}')
    result = 5911230987685765349780
    print(f'{result}')

    print('---Использование функций внутри f-строк')
    result = 5911230987685765349780
    pi = 3.141592
    print(f'Result = {min(result, int(pi))}')  # min()

    print('---Преобразование объекта DATETIME')
    result = 5911230987685765349780
    today = datetime.datetime.now()
    print(today)
    print(f'{today:%d-%m-%Y  %H:%M}')  # аббревиатуры универсальные
    today_format = f'{today:%d-%m-%Y  %H:%M}'  # далее используем этот формат там где нам нужно

    print('---Решение задачи с подсчетом процентов (какой процент составляет 86 от 150)')
    result = 5911230987685765349780
    real = 86
    full = 150
    print(f'{real/full:%}')
    print(f'{real / full:.2%}')

    print('---Какой процент составляет 86.25 от 150')
    real = 86.25
    full = 150
    print(f'{real / full:%}')
    print(f'{real / full:.0%}')  # без нулей

